name: 'Build and install Arcane Framework'
description: 'A GH Actions to easily compile and install the Arcane Framework'

inputs:
  source_dir:
    description: '[IN] Directory with framework sources'
    type: string
    required: true
  build_dir:
    description: '[OUT] Directory for build files'
    type: string
    required: true
  install_dir:
    description: '[OUT] Directory for install files'
    type: string
    required: false
    default: ""
  cache_dir:
    description: '[IN/OUT] Cache directory to accelerate compile time'
    type: string
    required: false
  cmake_additionnal_args:
    description: 'Additionnal arguments for configure'
    type: string
    required: false
    default: ""
  type_build:
    description: 'Type of build (Debug, Check, Release)'
    type: string
    required: false
    default: "Release"
  compilo:
    description: 'Compiler (GCC, CLang)'
    type: string
    required: false
    default: "GCC"
  with_cuda:
    description: 'Compile with CUDA too ?'
    type: boolean
    required: false
    default: false
  with_samples:
    description: 'Compile samples too ?'
    type: boolean
    required: false
    default: false


runs:
  using: "composite"
  steps:
    - name: Set ccache var env
      if: "${{ inputs.cache_dir != '' }}"
      shell: bash
      run: |
        echo "CCACHE_COMPRESS=true" >> $GITHUB_ENV
        echo "CCACHE_COMPRESSLEVEL=6" >> $GITHUB_ENV
        echo "CCACHE_DIR=${{ inputs.cache_dir }}" >> $GITHUB_ENV
        echo "CCACHE_MAXSIZE=5G" >> $GITHUB_ENV
        echo "CMAKE_ADD_ARGS=-DCMAKE_CXX_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV

    - name: Compute build type
      shell: bash
      run: |
        if [[ "${{ inputs.type_build }}" == "Check" ]]; then
          CMAKE_BUILD_TYPE="Release"
        else
          CMAKE_BUILD_TYPE="${{ inputs.type_build }}"
        fi
        echo "CMAKE_ADD_ARGS=${{ env.CMAKE_ADD_ARGS }} \
        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
        -DARCCORE_BUILD_MODE=${{ inputs.type_build }} \
        -DARCANE_BUILD_TYPE=${{ inputs.type_build }} \
        " >> $GITHUB_ENV

    - name: Personalize compiler
      shell: bash
      run: |
        if [[ "${{ inputs.compilo }}" == "CLang" ]]; then
          echo "CMAKE_ADD_ARGS=${{ env.CMAKE_ADD_ARGS }} -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++" >> $GITHUB_ENV
        else
          echo "CMAKE_ADD_ARGS=${{ env.CMAKE_ADD_ARGS }} -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++" >> $GITHUB_ENV
        fi

    # Oui, ici, le type 'boolean' ne semble pas l'interesser plus que Ã§a...
    - name: Add cuda
      if: "${{ inputs.with_cuda == 'true' }}"
      shell: bash
      run: |
        echo "CMAKE_ADD_ARGS=${{ env.CMAKE_ADD_ARGS }} -DARCANE_ACCELERATOR_MODE=CUDANVCC -DCMAKE_CUDA_COMPILER=nvcc" >> $GITHUB_ENV

    - name: Add install prefix
      if: "${{ inputs.install_dir != '' }}"
      shell: bash
      run: |
        echo "CMAKE_ADD_ARGS=${{ env.CMAKE_ADD_ARGS }} -DCMAKE_INSTALL_PREFIX=${{ inputs.install_dir }}" >> $GITHUB_ENV

    - name: Configure framework
      shell: bash
      run: |
        cmake \
        -S ${{ inputs.source_dir }} \
        -B ${{ inputs.build_dir }} \
        -GNinja \
        -DBUILD_SHARED_LIBS=ON \
        ${{ inputs.cmake_additionnal_args }} \
        ${{ env.CMAKE_ADD_ARGS }}

    - name: Build framework
      shell: bash
      run: |
        cmake --build ${{ inputs.build_dir }}

    - name: Install framework
      if: "${{ inputs.install_dir != '' }}"
      shell: bash
      run: |
        cmake --install ${{ inputs.build_dir }}

    - name: Configure samples
      if: "${{ inputs.with_samples == 'true' }}"
      shell: bash
      run: |
        cmake --build ${{ inputs.build_dir }} --target samples_configure

    - name: Build samples
      if: "${{ inputs.with_samples == 'true' }}"
      shell: bash
      run: |
        cmake --build ${{ inputs.build_dir }} --target samples_build

    - name: Get ccache status
      if: "${{ inputs.cache_dir != '' }}"
      shell: bash
      run: ccache -s
